.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "PYRSSGEN.TEX" "1" "Feb 02, 2023" "0.9" "python-rssgen"
.SH NAME
pyRssGen.tex \- pyRssGen Documentation
.SS Table of Contents
.INDENT 0.0
.IP \(bu 2
\fI\%Rssgenerator\fP
.INDENT 2.0
.IP \(bu 2
\fI\%Installation\fP
.IP \(bu 2
\fI\%Create a Feed\fP
.IP \(bu 2
\fI\%Generate the Feed\fP
.IP \(bu 2
\fI\%Add Feed Entries\fP
.IP \(bu 2
\fI\%Extensions\fP
.IP \(bu 2
\fI\%Testing the Generator\fP
.UNINDENT
.IP \(bu 2
\fI\%Module documentation\fP
.IP \(bu 2
\fI\%Indices and tables\fP
.UNINDENT
\fI\%Build Status\fP\fI\%Test Coverage Status\fP
.sp
This module can be used to generate web feeds in both ATOM and RSS format. It
has support for extensions. Included is for example an extension to produce
Podcasts.
.sp
It is licensed under the terms of both, the FreeBSD license and the LGPLv3+.
Choose the one which is more convenient for you. For more details have a look
at license.bsd and license.lgpl.
.sp
More details about the project:
.INDENT 0.0
.IP \(bu 2
\fI\%Repository\fP
.IP \(bu 2
\fI\%Documentation\fP
.IP \(bu 2
\fI\%Python Package Index\fP
.UNINDENT
.SH INSTALLATION
.sp
\fBPrebuild packages\fP
.sp
If your distribution includes this project as package, like Fedora Linux does,
you can simply use your package manager to install the package. For example:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ dnf install python3\-rssgen
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBUsing pip\fP
.sp
You can also use pip to install the rssgen module. Simply run:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ pip install rssgen
.ft P
.fi
.UNINDENT
.UNINDENT
.SH CREATE A FEED
.sp
To create a feed simply instantiate the RssGenerator class and insert some
data:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
from rssgen.feed import RssGenerator
fg = RssGenerator()
fg.id(\(aqhttp://lernfunk.de/media/654321\(aq)
fg.title(\(aqSome Testfeed\(aq)
fg.author( {\(aqname\(aq:\(aqJohn Doe\(aq,\(aqemail\(aq:\(aqjohn@example.de\(aq} )
fg.link( href=\(aqhttp://example.com\(aq, rel=\(aqalternate\(aq )
fg.logo(\(aqhttp://ex.com/logo.jpg\(aq)
fg.subtitle(\(aqThis is a cool feed!\(aq)
fg.link( href=\(aqhttp://larskiesow.de/test.atom\(aq, rel=\(aqself\(aq )
fg.language(\(aqen\(aq)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Note that for the methods which set fields that can occur more than once in a
feed you can use all of the following ways to provide data:
.INDENT 0.0
.IP \(bu 2
Provide the data for that element as keyword arguments
.IP \(bu 2
Provide the data for that element as dictionary
.IP \(bu 2
Provide a list of dictionaries with the data for several elements
.UNINDENT
.sp
Example:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
fg.contributor( name=\(aqJohn Doe\(aq, email=\(aqjdoe@example.com\(aq )
fg.contributor({\(aqname\(aq:\(aqJohn Doe\(aq, \(aqemail\(aq:\(aqjdoe@example.com\(aq})
fg.contributor([{\(aqname\(aq:\(aqJohn Doe\(aq, \(aqemail\(aq:\(aqjdoe@example.com\(aq}, ...])
.ft P
.fi
.UNINDENT
.UNINDENT
.SH GENERATE THE FEED
.sp
After that you can generate both RSS or ATOM by calling the respective method:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
atomfeed = fg.atom_str(pretty=True) # Get the ATOM feed as string
rssfeed  = fg.rss_str(pretty=True) # Get the RSS feed as string
fg.atom_file(\(aqatom.xml\(aq) # Write the ATOM feed to a file
fg.rss_file(\(aqrss.xml\(aq) # Write the RSS feed to a file
.ft P
.fi
.UNINDENT
.UNINDENT
.SH ADD FEED ENTRIES
.sp
To add entries (items) to a feed you need to create new FeedEntry objects and
append them to the list of entries in the RssGenerator. The most convenient
way to go is to use the RssGenerator itself for the instantiation of the
FeedEntry object:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
fe = fg.add_entry()
fe.id(\(aqhttp://lernfunk.de/media/654321/1\(aq)
fe.title(\(aqThe First Episode\(aq)
fe.link(href=\(dqhttp://lernfunk.de/feed\(dq)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The RssGenerator’s method \fIadd_entry(…)\fP will generate a new FeedEntry
object, automatically append it to the feeds internal list of entries and
return it, so that additional data can be added.
.SH EXTENSIONS
.sp
The RssGenerator supports extensions to include additional data into the XML
structure of the feeds. Extensions can be loaded like this:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
fg.load_extension(\(aqsomeext\(aq, atom=True, rss=True)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This example would try to load the extension “someext” from the file
\fIext/someext.py\fP\&.  It is required that \fIsomeext.py\fP contains a class named
“SomextExtension” which is required to have at least the two methods
\fIextend_rss(…)\fP and \fIextend_atom(…)\fP\&. Although not required, it is strongly
suggested to use \fIBaseExtension\fP from \fIext/base.py\fP as superclass.
.sp
\fIload_extension(‘someext’, …)\fP will also try to load a class named
“SomextEntryExtension” for every entry of the feed. This class can be located
either in the same file as SomextExtension or in \fIext/someext_entry.py\fP which
is suggested especially for large extensions.
.sp
The parameters \fIatom\fP and \fIrss\fP control if the extension is used for ATOM and
RSS feeds respectively. The default value for both parameters is \fITrue\fP,
meaning the extension is used for both kinds of feeds.
.sp
\fBExample: Producing a Podcast\fP
.sp
One extension already provided is the podcast extension. A podcast is an RSS
feed with some additional elements for ITunes.
.sp
To produce a podcast simply load the \fIpodcast\fP extension:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
from rssgen.feed import RssGenerator
fg = RssGenerator()
fg.load_extension(\(aqpodcast\(aq)
\&...
fg.podcast.itunes_category(\(aqTechnology\(aq, \(aqPodcasting\(aq)
\&...
fe = fg.add_entry()
fe.id(\(aqhttp://lernfunk.de/media/654321/1/file.mp3\(aq)
fe.title(\(aqThe First Episode\(aq)
fe.description(\(aqEnjoy our first episode.\(aq)
fe.enclosure(\(aqhttp://lernfunk.de/media/654321/1/file.mp3\(aq, 0, \(aqaudio/mpeg\(aq)
\&...
fg.rss_str(pretty=True)
fg.rss_file(\(aqpodcast.xml\(aq)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
If the RssGenerator class is used to load an extension, it is automatically
loaded for every feed entry as well.  You can, however, load an extension for a
specific FeedEntry only by calling \fIload_extension(…)\fP on that entry.
.sp
Even if extensions are loaded, they can be temporarily disabled during the feed
generation by calling the generating method with the keyword argument
\fIextensions\fP set to \fIFalse\fP\&.
.sp
\fBCustom Extensions\fP
.sp
If you want to load custom extensions which are not part of the rssgen
package, you can use the method \fIregister_extension\fP instead. You can directly
pass the classes for the feed and the entry extension to this method meaning
that you can define them everywhere.
.SH TESTING THE GENERATOR
.sp
You can test the module by simply executing:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ python \-m rssgen
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
If you want to have a look at the code for this test to have a working code
example for a whole feed generation process, you can find it in the
\fI\%__main__.py\fP\&.
.SH API DOCUMENTATION
.SS rssgen
.sp
This module can be used to generate web feeds in both ATOM and RSS format.
It has support for extensions. Included is for example an extension to
produce Podcasts.
.INDENT 0.0
.TP
.B copyright
2013 by Lars Kiesow
.TP
.B license
FreeBSD and LGPL, see license.* for more details.
.UNINDENT
.SS Create a Feed
.sp
To create a feed simply instantiate the RssGenerator class and insert some
data:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
>>> from rssgen.feed import RssGenerator
>>> fg = RssGenerator()
>>> fg.id(\(aqhttp://lernfunk.de/media/654321\(aq)
>>> fg.title(\(aqSome Testfeed\(aq)
>>> fg.author( {\(aqname\(aq:\(aqJohn Doe\(aq,\(aqemail\(aq:\(aqjohn@example.de\(aq} )
>>> fg.link( href=\(aqhttp://example.com\(aq, rel=\(aqalternate\(aq )
>>> fg.logo(\(aqhttp://ex.com/logo.jpg\(aq)
>>> fg.subtitle(\(aqThis is a cool feed!\(aq)
>>> fg.link( href=\(aqhttp://larskiesow.de/test.atom\(aq, rel=\(aqself\(aq )
>>> fg.language(\(aqen\(aq)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Note that for the methods which set fields that can occur more than once in
a feed you can use all of the following ways to provide data:
.INDENT 0.0
.IP \(bu 2
Provide the data for that element as keyword arguments
.IP \(bu 2
Provide the data for that element as dictionary
.IP \(bu 2
Provide a list of dictionaries with the data for several elements
.UNINDENT
.sp
Example:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
>>> fg.contributor(name=\(aqJohn Doe\(aq, email=\(aqjdoe@example.com\(aq )
>>> fg.contributor({\(aqname\(aq:\(aqJohn Doe\(aq, \(aqemail\(aq:\(aqjdoe@example.com\(aq})
>>> fg.contributor([{\(aqname\(aq:\(aqJohn\(aq, \(aqemail\(aq:\(aqjdoe@example.com\(aq}, …])
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Generate the Feed
.sp
After that you can generate both RSS or ATOM by calling the respective
method:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
>>> atomfeed = fg.atom_str(pretty=True) # Get the ATOM feed as string
>>> rssfeed  = fg.rss_str(pretty=True) # Get the RSS feed as string
>>> fg.atom_file(\(aqatom.xml\(aq) # Write the ATOM feed to a file
>>> fg.rss_file(\(aqrss.xml\(aq) # Write the RSS feed to a file
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Add Feed Entries
.sp
To add entries (items) to a feed you need to create new FeedEntry objects
and append them to the list of entries in the RssGenerator. The most
convenient way to go is to use the RssGenerator itself for the
instantiation of the FeedEntry object:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
>>> fe = fg.add_entry()
>>> fe.id(\(aqhttp://lernfunk.de/media/654321/1\(aq)
>>> fe.title(\(aqThe First Episode\(aq)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The RssGenerators method add_entry(…) without argument provides will
automatically generate a new FeedEntry object, append it to the feeds
internal list of entries and return it, so that additional data can be
added.
.SS Extensions
.sp
The RssGenerator supports extension to include additional data into the
XML structure of the feeds. Extensions can be loaded like this:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
>>> fg.load_extension(\(aqsomeext\(aq, atom=True, rss=True)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This will try to load the extension “someext” from the file
\fIext/someext.py\fP\&. It is required that \fIsomeext.py\fP contains a class named
“SomextExtension” which is required to have at least the two methods
\fIextend_rss(…)\fP and \fIextend_atom(…)\fP\&. Although not required, it is
strongly suggested to use BaseExtension from \fIext/base.py\fP as superclass.
.sp
\fIload_extension(‘someext’, …)\fP will also try to load a class named
“SomextEntryExtension” for every entry of the feed. This class can be
located either in the same file as SomextExtension or in
\fIext/someext_entry.py\fP which is suggested especially for large extensions.
.sp
The parameters \fIatom\fP and \fIrss\fP tell the RssGenerator if the extensions
should only be used for either ATOM or RSS feeds. The default value for
both parameters is true which means that the extension would be used for
both kinds of feeds.
.sp
\fBExample: Producing a Podcast\fP
.sp
One extension already provided is the podcast extension. A podcast is an
RSS feed with some additional elements for ITunes.
.sp
To produce a podcast simply load the \fIpodcast\fP extension:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
>>> from rssgen.feed import RssGenerator
>>> fg = RssGenerator()
>>> fg.load_extension(\(aqpodcast\(aq)
\&...
>>> fg.podcast.itunes_category(\(aqTechnology\(aq, \(aqPodcasting\(aq)
\&...
>>> fg.rss_str(pretty=True)
>>> fg.rss_file(\(aqpodcast.xml\(aq)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Of cause the extension has to be loaded for the FeedEntry objects as well
but this is done automatically by the RssGenerator for every feed entry if
the extension is loaded for the whole feed. You can, however, load an
extension for a specific FeedEntry by calling \fIload_extension(…)\fP on that
entry. But this is a rather uncommon use.
.sp
Of cause you can still produce a normal ATOM or RSS feed, even if you have
loaded some plugins by temporary disabling them during the feed generation.
This can be done by calling the generating method with the keyword argument
\fIextensions\fP set to \fIFalse\fP\&.
.SS Testing the Generator
.sp
You can test the module by simply executing:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ python \-m rssgen
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Contents:
.SS rssgen.feed
.INDENT 0.0
.TP
.B copyright
2013\-2020, Lars Kiesow <\fI\%lkiesow@uos.de\fP>
.TP
.B license
FreeBSD and LGPL, see license.* for more details.
.UNINDENT
.INDENT 0.0
.TP
.B class  rssgen.feed.RssGenerator
RssGenerator for generating ATOM and RSS feeds.
.INDENT 7.0
.TP
.B add_entry(feedEntry=None, order=\(aqprepend\(aq)
This method will add a new entry to the feed. If the feedEntry
argument is omittet a new Entry object is created automatically. This
is the preferred way to add new entries to a feed.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfeedEntry\fP – FeedEntry object to add.
.IP \(bu 2
\fBorder\fP – If \fIprepend\fP is chosen, the entry will be inserted
at the beginning of the feed. If \fIappend\fP is chosen,
the entry will be appended to the feed.
(default: \fIprepend\fP).
.UNINDENT
.TP
.B Returns
FeedEntry object created or passed to this function.
.UNINDENT
.sp
Example:
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
\&...
>>> entry = rssgen.add_entry()
>>> entry.title(\(aqFirst feed entry\(aq)
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B add_item(item=None)
This method will add a new item to the feed. If the item argument is
omittet a new FeedEntry object is created automatically. This is just
another name for add_entry(…)
.UNINDENT
.INDENT 7.0
.TP
.B atom_file(filename, extensions=True, pretty=False, encoding=\(aqUTF\-8\(aq, xml_declaration=True)
Generates an ATOM feed and write the resulting XML to a file.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP – Name of file to write or a file\-like object or a URL.
.IP \(bu 2
\fBextensions\fP – Enable or disable the loaded extensions for the xml
generation (default: enabled).
.IP \(bu 2
\fBpretty\fP – If the feed should be split into multiple lines and
properly indented.
.IP \(bu 2
\fBencoding\fP – Encoding used in the  XML file (default: UTF\-8).
.IP \(bu 2
\fBxml_declaration\fP – If an XML declaration should be added to the
output (Default: enabled).
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B atom_str(pretty=False, extensions=True, encoding=\(aqUTF\-8\(aq, xml_declaration=True)
Generates an ATOM feed and returns the feed XML as string.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBpretty\fP – If the feed should be split into multiple lines and
properly indented.
.IP \(bu 2
\fBextensions\fP – Enable or disable the loaded extensions for the xml
generation (default: enabled).
.IP \(bu 2
\fBencoding\fP – Encoding used in the  XML file (default: UTF\-8).
.IP \(bu 2
\fBxml_declaration\fP – If an XML declaration should be added to the
output (Default: enabled).
.UNINDENT
.TP
.B Returns
String representation of the ATOM feed.
.UNINDENT
.sp
\fBReturn type:\fP The return type may vary between different Python
versions and your encoding parameters passed to this method. For
details have a look at the \fI\%lxml documentation\fP
.UNINDENT
.INDENT 7.0
.TP
.B author(author=None, replace=False, **kwargs)
Get or set author data. An author element is a dictionary containing
a name, an email address and a URI. Name is mandatory for ATOM, email
is mandatory for RSS.
.sp
This method can be called with:
.INDENT 7.0
.IP \(bu 2
the fields of an author as keyword arguments
.IP \(bu 2
the fields of an author as a dictionary
.IP \(bu 2
a list of dictionaries containing the author fields
.UNINDENT
.sp
An author has the following fields:
.INDENT 7.0
.IP \(bu 2
\fIname\fP conveys a human\-readable name for the person.
.IP \(bu 2
\fIuri\fP contains a home page for the person.
.IP \(bu 2
\fIemail\fP contains an email address for the person.
.UNINDENT
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBauthor\fP – Dictionary or list of dictionaries with author data.
.IP \(bu 2
\fBreplace\fP – Add or replace old data.
.UNINDENT
.TP
.B Returns
List of authors as dictionaries.
.UNINDENT
.sp
Example:
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
>>> rssgen.author({\(aqname\(aq:\(aqJohn Doe\(aq, \(aqemail\(aq:\(aqjdoe@example.com\(aq})
[{\(aqname\(aq:\(aqJohn Doe\(aq,\(aqemail\(aq:\(aqjdoe@example.com\(aq}]

>>> rssgen.author([{\(aqname\(aq:\(aqMr. X\(aq},{\(aqname\(aq:\(aqMax\(aq}])
[{\(aqname\(aq:\(aqJohn Doe\(aq,\(aqemail\(aq:\(aqjdoe@example.com\(aq},
        {\(aqname\(aq:\(aqJohn Doe\(aq}, {\(aqname\(aq:\(aqMax\(aq}]

>>> rssgen.author(name=\(aqJohn Doe\(aq, email=\(aqjdoe@example.com\(aq,
                   replace=True)
[{\(aqname\(aq:\(aqJohn Doe\(aq,\(aqemail\(aq:\(aqjdoe@example.com\(aq}]
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B category(category=None, replace=False, **kwargs)
Get or set categories that the feed belongs to.
.sp
This method can be called with:
.INDENT 7.0
.IP \(bu 2
the fields of a category as keyword arguments
.IP \(bu 2
the fields of a category as a dictionary
.IP \(bu 2
a list of dictionaries containing the category fields
.UNINDENT
.sp
A categories has the following fields:
.INDENT 7.0
.IP \(bu 2
\fIterm\fP identifies the category
.IP \(bu 2
\fIscheme\fP identifies the categorization scheme via a URI.
.IP \(bu 2
\fIlabel\fP provides a human\-readable label for display
.UNINDENT
.sp
If a label is present it is used for the RSS feeds. Otherwise the term
is used. The scheme is used for the domain attribute in RSS.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBlink\fP – Dict or list of dicts with data.
.IP \(bu 2
\fBreplace\fP – Add or replace old data.
.UNINDENT
.TP
.B Returns
List of category data.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B cloud(domain=None, port=None, path=None, registerProcedure=None, protocol=None)
Set or get the cloud data of the feed. It is an RSS only attribute.
It specifies a web service that supports the rssCloud interface which
can be implemented in HTTP\-POST, XML\-RPC or SOAP 1.1.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBdomain\fP – The domain where the webservice can be found.
.IP \(bu 2
\fBport\fP – The port the webservice listens to.
.IP \(bu 2
\fBpath\fP – The path of the webservice.
.IP \(bu 2
\fBregisterProcedure\fP – The procedure to call.
.IP \(bu 2
\fBprotocol\fP – Can be either HTTP\-POST, XML\-RPC or SOAP 1.1.
.UNINDENT
.TP
.B Returns
Dictionary containing the cloud data.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B contributor(contributor=None, replace=False, **kwargs)
Get or set the contributor data of the feed. This is an ATOM only
value.
.sp
This method can be called with:
\- the fields of an contributor as keyword arguments
\- the fields of an contributor as a dictionary
\- a list of dictionaries containing the contributor fields
.sp
An contributor has the following fields:
\- \fIname\fP conveys a human\-readable name for the person.
\- \fIuri\fP contains a home page for the person.
\- \fIemail\fP contains an email address for the person.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBcontributor\fP – Dictionary or list of dictionaries with contributor
data.
.IP \(bu 2
\fBreplace\fP – Add or replace old data.
.UNINDENT
.TP
.B Returns
List of contributors as dictionaries.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B copyright(copyright=None)
Get or set the copyright notice for content in the channel. This RSS
value will also set the atom:rights value.
.INDENT 7.0
.TP
.B Parameters
\fBcopyright\fP – The copyright notice.
.TP
.B Returns
The copyright notice.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B description(description=None)
Set and get the description of the feed. This is an RSS only element
which is a phrase or sentence describing the channel. It is mandatory
for RSS feeds. It is roughly the same as atom:subtitle. Thus setting
this will also set atom:subtitle.
.INDENT 7.0
.TP
.B Parameters
\fBdescription\fP – Description of the channel.
.TP
.B Returns
Description of the channel.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B docs(docs=None)
Get or set the docs value of the feed. This is an RSS only value. It
is a URL that points to the documentation for the format used in the
RSS file. It is probably a pointer to [1]. It is for people who might
stumble across an RSS file on a Web server 25 years from now and wonder
what it is.
.sp
[1]: \fI\%http://www.rssboard.org/rss\-specification\fP
.INDENT 7.0
.TP
.B Parameters
\fBdocs\fP – URL of the format documentation.
.TP
.B Returns
URL of the format documentation.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B entry(entry=None, replace=False)
Get or set feed entries. Use the add_entry() method instead to
automatically create the FeedEntry objects.
.sp
This method takes both a single FeedEntry object or a list of objects.
.INDENT 7.0
.TP
.B Parameters
\fBentry\fP – FeedEntry object or list of FeedEntry objects.
.TP
.B Returns
List ob all feed entries.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B generator(generator=None, version=None, uri=None)
Get or set the generator of the feed which identifies the software
used to generate the feed, for debugging and other purposes. Both the
uri and version attributes are optional and only available in the ATOM
feed.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBgenerator\fP – Software used to create the feed.
.IP \(bu 2
\fBversion\fP – Version of the software.
.IP \(bu 2
\fBuri\fP – URI the software can be found.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B icon(icon=None)
Get or set the icon of the feed which is a small image which
provides iconic visual identification for the feed. Icons should be
square. This is an ATOM only value.
.INDENT 7.0
.TP
.B Parameters
\fBicon\fP – URI of the feeds icon.
.TP
.B Returns
URI of the feeds icon.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B id(id=None)
Get or set the feed id which identifies the feed using a universally
unique and permanent URI. If you have a long\-term, renewable lease on
your Internet domain name, then you can feel free to use your website’s
address. This field is for ATOM only. It is mandatory for ATOM.
.INDENT 7.0
.TP
.B Parameters
\fBid\fP – New Id of the ATOM feed.
.TP
.B Returns
Id of the feed.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B image(url=None, title=None, link=None, width=None, height=None, description=None)
Set the image of the feed. This element is roughly equivalent to
atom:logo.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBurl\fP – The URL of a GIF, JPEG or PNG image.
.IP \(bu 2
\fBtitle\fP – Describes the image. The default value is the feeds
title.
.IP \(bu 2
\fBlink\fP – URL of the site the image will link to. The default is to
use the feeds first altertate link.
.IP \(bu 2
\fBwidth\fP – Width of the image in pixel. The maximum is 144.
.IP \(bu 2
\fBheight\fP – The height of the image. The maximum is 400.
.IP \(bu 2
\fBdescription\fP – Title of the link.
.UNINDENT
.TP
.B Returns
Data of the image as dictionary.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B item(item=None, replace=False)
Get or set feed items. This is just another name for entry(…)
.UNINDENT
.INDENT 7.0
.TP
.B language(language=None)
Get or set the language of the feed. It indicates the language the
channel is written in. This allows aggregators to group all Italian
language sites, for example, on a single page. This is an RSS only
field.  However, this value will also be used to set the xml:lang
property of the ATOM feed node.
The value should be an IETF language tag.
.INDENT 7.0
.TP
.B Parameters
\fBlanguage\fP – Language of the feed.
.TP
.B Returns
Language of the feed.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B lastBuildDate(lastBuildDate=None)
Set or get the lastBuildDate value which indicates the last time the
content of the channel changed.
.sp
The value can either be a string which will automatically be parsed or
a datetime.datetime object. In any case it is necessary that the value
include timezone information.
.sp
This will set both atom:updated and rss:lastBuildDate.
.INDENT 7.0
.TP
.B Default value
If not set, lastBuildDate has as value the current date and time.
.UNINDENT
.INDENT 7.0
.TP
.B Parameters
\fBlastBuildDate\fP – The modification date.
.TP
.B Returns
Modification date as datetime.datetime
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B link(link=None, replace=False, **kwargs)
Get or set link data. An link element is a dict with the fields
href, rel, type, hreflang, title, and length. Href is mandatory for
ATOM.
.sp
This method can be called with:
.INDENT 7.0
.IP \(bu 2
the fields of a link as keyword arguments
.IP \(bu 2
the fields of a link as a dictionary
.IP \(bu 2
a list of dictionaries containing the link fields
.UNINDENT
.sp
A link has the following fields:
.INDENT 7.0
.IP \(bu 2
\fIhref\fP is the URI of the referenced resource (typically a Web page)
.IP \(bu 2
\fIrel\fP contains a single link relationship type. It can be a full URI,
or one of the following predefined values (default=alternate):
.INDENT 2.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
\fIalternate\fP an alternate representation of the entry or feed, for
example a permalink to the html version of the entry, or the
front page of the weblog.
.IP \(bu 2
\fIenclosure\fP a related resource which is potentially large in size
and might require special handling, for example an audio or video
recording.
.IP \(bu 2
\fIrelated\fP an document related to the entry or feed.
.IP \(bu 2
\fIself\fP the feed itself.
.IP \(bu 2
\fIvia\fP the source of the information provided in the entry.
.UNINDENT
.UNINDENT
.UNINDENT
.IP \(bu 2
\fItype\fP indicates the media type of the resource.
.IP \(bu 2
\fIhreflang\fP indicates the language of the referenced resource.
.IP \(bu 2
\fItitle\fP human readable information about the link, typically for
display purposes.
.IP \(bu 2
\fIlength\fP the length of the resource, in bytes.
.UNINDENT
.sp
RSS only supports one link with URL only.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBlink\fP – Dict or list of dicts with data.
.IP \(bu 2
\fBreplace\fP – If old links are to be replaced (default: False)
.UNINDENT
.TP
.B Returns
Current set of link data
.UNINDENT
.sp
Example:
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
>>> rssgen.link( href=\(aqhttp://example.com/\(aq, rel=\(aqself\(aq)
[{\(aqhref\(aq:\(aqhttp://example.com/\(aq, \(aqrel\(aq:\(aqself\(aq}]
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B logo(logo=None)
Get or set the logo of the feed which is a larger image which
provides visual identification for the feed. Images should be twice as
wide as they are tall. This is an ATOM value but will also set the
rss:image value.
.INDENT 7.0
.TP
.B Parameters
\fBlogo\fP – Logo of the feed.
.TP
.B Returns
Logo of the feed.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B managingEditor(managingEditor=None)
Set or get the value for managingEditor which is the email address
for person responsible for editorial content.    This is a RSS only
value.
.INDENT 7.0
.TP
.B Parameters
\fBmanagingEditor\fP – Email address of the managing editor.
.TP
.B Returns
Email address of the managing editor.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B pubDate(pubDate=None)
Set or get the publication date for the content in the channel. For
example, the New York Times publishes on a daily basis, the publication
date flips once every 24 hours. That’s when the pubDate of the channel
changes.
.sp
The value can either be a string which will automatically be parsed or
a datetime.datetime object. In any case it is necessary that the value
include timezone information.
.sp
This will set both atom:updated and rss:lastBuildDate.
.INDENT 7.0
.TP
.B Parameters
\fBpubDate\fP – The publication date.
.TP
.B Returns
Publication date as datetime.datetime
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B rating(rating=None)
Set and get the PICS rating for the channel.    It is an RSS only
value.
.UNINDENT
.INDENT 7.0
.TP
.B remove_entry(entry)
Remove a single entry from the feed. This method accepts both the
FeedEntry object to remove or the index of the entry as argument.
.INDENT 7.0
.TP
.B Parameters
\fBentry\fP – Entry or index of entry to remove.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B remove_item(item)
Remove a single item from the feed. This is another name for
remove_entry.
.UNINDENT
.INDENT 7.0
.TP
.B rights(rights=None)
Get or set the rights value of the feed which conveys information
about rights, e.g. copyrights, held in and over the feed. This ATOM
value will also set rss:copyright.
.INDENT 7.0
.TP
.B Parameters
\fBrights\fP – Rights information of the feed.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B rss_file(filename, extensions=True, pretty=False, encoding=\(aqUTF\-8\(aq, xml_declaration=True)
Generates an RSS feed and write the resulting XML to a file.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP – Name of file to write or a file\-like object or a URL.
.IP \(bu 2
\fBextensions\fP – Enable or disable the loaded extensions for the xml
generation (default: enabled).
.IP \(bu 2
\fBpretty\fP – If the feed should be split into multiple lines and
properly indented.
.IP \(bu 2
\fBencoding\fP – Encoding used in the  XML file (default: UTF\-8).
.IP \(bu 2
\fBxml_declaration\fP – If an XML declaration should be added to the
output (Default: enabled).
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B rss_str(pretty=False, extensions=True, encoding=\(aqUTF\-8\(aq, xml_declaration=True)
Generates an RSS feed and returns the feed XML as string.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBpretty\fP – If the feed should be split into multiple lines and
properly indented.
.IP \(bu 2
\fBextensions\fP – Enable or disable the loaded extensions for the xml
generation (default: enabled).
.IP \(bu 2
\fBencoding\fP – Encoding used in the  XML file (default: UTF\-8).
.IP \(bu 2
\fBxml_declaration\fP – If an XML declaration should be added to the
output (Default: enabled).
.UNINDENT
.TP
.B Returns
String representation of the RSS feed.
.UNINDENT
.sp
\fBReturn type:\fP The return type may vary between different Python
versions and your encoding parameters passed to this method. For
details have a look at the \fI\%lxml documentation\fP
.UNINDENT
.INDENT 7.0
.TP
.B skipDays(days=None, replace=False)
Set or get the value of skipDays, a hint for aggregators telling
them which days they can skip This is an RSS only value.
.sp
This method can be called with a day name or a list of day names. The
days are represented as strings from ‘Monday’ to ‘Sunday’.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBhours\fP – List of days the feedreaders should not check the feed.
.IP \(bu 2
\fBreplace\fP – Add or replace old data.
.UNINDENT
.TP
.B Returns
List of days the feedreaders should not check the feed.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B skipHours(hours=None, replace=False)
Set or get the value of skipHours, a hint for aggregators telling
them which hours they can skip. This is an RSS only value.
.sp
This method can be called with an hour or a list of hours. The hours
are represented as integer values from 0 to 23.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBhours\fP – List of hours the feedreaders should not check the feed.
.IP \(bu 2
\fBreplace\fP – Add or replace old data.
.UNINDENT
.TP
.B Returns
List of hours the feedreaders should not check the feed.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B subtitle(subtitle=None)
Get or set the subtitle value of the cannel which contains a
human\-readable description or subtitle for the feed. This ATOM property
will also set the value for rss:description.
.INDENT 7.0
.TP
.B Parameters
\fBsubtitle\fP – The subtitle of the feed.
.TP
.B Returns
The subtitle of the feed.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B textInput(title=None, description=None, name=None, link=None)
Get or set the value of textInput. This is an RSS only field.  The
purpose of the <textInput> element is something of a mystery. You can
use it to specify a search engine box. Or to allow a reader to provide
feedback. Most aggregators ignore it.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBtitle\fP – The label of the Submit button in the text input area.
.IP \(bu 2
\fBdescription\fP – Explains the text input area.
.IP \(bu 2
\fBname\fP – The name of the text object in the text input area.
.IP \(bu 2
\fBlink\fP – The URL of the CGI script that processes text input
requests.
.UNINDENT
.TP
.B Returns
Dictionary containing textInput values.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B title(title=None)
Get or set the title value of the feed. It should contain a human
readable title for the feed. Often the same as the title of the
associated website. Title is mandatory for both ATOM and RSS and should
not be blank.
.INDENT 7.0
.TP
.B Parameters
\fBtitle\fP – The new title of the feed.
.TP
.B Returns
The feeds title.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B ttl(ttl=None)
Get or set the ttl value. It is an RSS only element. ttl stands for
time to live. It’s a number of minutes that indicates how long a
channel can be cached before refreshing from the source.
.INDENT 7.0
.TP
.B Parameters
\fBttl\fP – Integer value indicating how long the channel may be
cached.
.TP
.B Returns
Time to live.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updated(updated=None)
Set or get the updated value which indicates the last time the feed
was modified in a significant way.
.sp
The value can either be a string which will automatically be parsed or
a datetime.datetime object. In any case it is necessary that the value
include timezone information.
.sp
This will set both atom:updated and rss:lastBuildDate.
.INDENT 7.0
.TP
.B Default value
If not set, updated has as value the current date and time.
.UNINDENT
.INDENT 7.0
.TP
.B Parameters
\fBupdated\fP – The modification date.
.TP
.B Returns
Modification date as datetime.datetime
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B webMaster(webMaster=None)
Get and set the value of webMaster, which represents the email
address for the person responsible for technical issues relating to the
feed.  This is an RSS only value.
.INDENT 7.0
.TP
.B Parameters
\fBwebMaster\fP – Email address of the webmaster.
.TP
.B Returns
Email address of the webmaster.
.UNINDENT
.UNINDENT
.UNINDENT
.SS rssgen.entry
.INDENT 0.0
.TP
.B copyright
2013\-2020, Lars Kiesow <\fI\%lkiesow@uos.de\fP>
.TP
.B license
FreeBSD and LGPL, see license.* for more details.
.UNINDENT
.INDENT 0.0
.TP
.B class  rssgen.entry.FeedEntry
FeedEntry call representing an ATOM feeds entry node or an RSS feeds item
node.
.INDENT 7.0
.TP
.B atom_entry(extensions=True)
Create an ATOM entry and return it.
.UNINDENT
.INDENT 7.0
.TP
.B author(author=None, replace=False, **kwargs)
Get or set author data. An author element is a dict containing a
name, an email address and a uri. Name is mandatory for ATOM, email is
mandatory for RSS.
.sp
This method can be called with:
\- the fields of an author as keyword arguments
\- the fields of an author as a dictionary
\- a list of dictionaries containing the author fields
.sp
An author has the following fields:
\- \fIname\fP conveys a human\-readable name for the person.
\- \fIuri\fP contains a home page for the person.
\- \fIemail\fP contains an email address for the person.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBauthor\fP – Dict or list of dicts with author data.
.IP \(bu 2
\fBreplace\fP – Add or replace old data.
.UNINDENT
.UNINDENT
.sp
Example:
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
>>> author({\(aqname\(aq:\(aqJohn Doe\(aq, \(aqemail\(aq:\(aqjdoe@example.com\(aq})
[{\(aqname\(aq:\(aqJohn Doe\(aq,\(aqemail\(aq:\(aqjdoe@example.com\(aq}]

>>> author([{\(aqname\(aq: \(aqMr. X\(aq}, {\(aqname\(aq: \(aqMax\(aq}])
[{\(aqname\(aq:\(aqJohn Doe\(aq,\(aqemail\(aq:\(aqjdoe@example.com\(aq},
        {\(aqname\(aq:\(aqJohn Doe\(aq}, {\(aqname\(aq:\(aqMax\(aq}]

>>> author(name=\(aqJohn Doe\(aq, email=\(aqjdoe@example.com\(aq, replace=True)
[{\(aqname\(aq:\(aqJohn Doe\(aq,\(aqemail\(aq:\(aqjdoe@example.com\(aq}]
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B category(category=None, replace=False, **kwargs)
Get or set categories that the entry belongs to.
.sp
This method can be called with:
\- the fields of a category as keyword arguments
\- the fields of a category as a dictionary
\- a list of dictionaries containing the category fields
.sp
A categories has the following fields:
\- \fIterm\fP identifies the category
\- \fIscheme\fP identifies the categorization scheme via a URI.
\- \fIlabel\fP provides a human\-readable label for display
.sp
If a label is present it is used for the RSS feeds. Otherwise the term
is used. The scheme is used for the domain attribute in RSS.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBcategory\fP – Dict or list of dicts with data.
.IP \(bu 2
\fBreplace\fP – Add or replace old data.
.UNINDENT
.TP
.B Returns
List of category data.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B comments(comments=None)
Get or set the value of comments which is the URL of the comments
page for the item. This is a RSS only value.
.INDENT 7.0
.TP
.B Parameters
\fBcomments\fP – URL to the comments page.
.TP
.B Returns
URL to the comments page.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B content(content=None, src=None, type=None)
Get or set the content of the entry which contains or links to the
complete content of the entry. Content must be provided for ATOM
entries if there is no alternate link, and should be provided if there
is no summary. If the content is set (not linked) it will also set
rss:description.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBcontent\fP – The content of the feed entry.
.IP \(bu 2
\fBsrc\fP – Link to the entries content.
.IP \(bu 2
\fBtype\fP – If type is CDATA content would not be escaped.
.UNINDENT
.TP
.B Returns
Content element of the entry.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B contributor(contributor=None, replace=False, **kwargs)
Get or set the contributor data of the feed. This is an ATOM only
value.
.sp
This method can be called with:
\- the fields of an contributor as keyword arguments
\- the fields of an contributor as a dictionary
\- a list of dictionaries containing the contributor fields
.sp
An contributor has the following fields:
\- \fIname\fP conveys a human\-readable name for the person.
\- \fIuri\fP contains a home page for the person.
\- \fIemail\fP contains an email address for the person.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBcontributor\fP – Dictionary or list of dictionaries with contributor
data.
.IP \(bu 2
\fBreplace\fP – Add or replace old data.
.UNINDENT
.TP
.B Returns
List of contributors as dictionaries.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B description(description=None, isSummary=False)
Get or set the description value which is the item synopsis.
Description is an RSS only element. For ATOM feeds it is split in
summary and content. The isSummary parameter can be used to control
which ATOM value is set when setting description.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBdescription\fP – Description of the entry.
.IP \(bu 2
\fBisSummary\fP – If the description should be used as content or
summary.
.UNINDENT
.TP
.B Returns
The entries description.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B enclosure(url=None, length=None, type=None)
Get or set the value of enclosure which describes a media object
that is attached to the item. This is a RSS only value which is
represented by link(rel=enclosure) in ATOM. ATOM feeds can furthermore
contain several enclosures while RSS may contain only one. That is why
this method, if repeatedly called, will add more than one enclosures to
the feed.  However, only the last one is used for RSS.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBurl\fP – URL of the media object.
.IP \(bu 2
\fBlength\fP – Size of the media in bytes.
.IP \(bu 2
\fBtype\fP – Mimetype of the linked media.
.UNINDENT
.TP
.B Returns
Data of the enclosure element.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B guid(guid=None, permalink=False)
Get or set the entries guid which is a string that uniquely
identifies the item. This will also set atom:id.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBguid\fP – Id of the entry.
.IP \(bu 2
\fBpermalink\fP – If this is a permanent identifier for this item
.UNINDENT
.TP
.B Returns
Id and permalink setting of the entry.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B id(id=None)
Get or set the entry id which identifies the entry using a
universally unique and permanent URI. Two entries in a feed can have
the same value for id if they represent the same entry at different
points in time. This method will also set rss:guid with permalink set
to False. Id is mandatory for an ATOM entry.
.INDENT 7.0
.TP
.B Parameters
\fBid\fP – New Id of the entry.
.TP
.B Returns
Id of the entry.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B link(link=None, replace=False, **kwargs)
Get or set link data. An link element is a dict with the fields
href, rel, type, hreflang, title, and length. Href is mandatory for
ATOM.
.sp
This method can be called with:
\- the fields of a link as keyword arguments
\- the fields of a link as a dictionary
\- a list of dictionaries containing the link fields
.sp
A link has the following fields:
.INDENT 7.0
.IP \(bu 2
\fIhref\fP is the URI of the referenced resource (typically a Web page)
.IP \(bu 2
\fIrel\fP contains a single link relationship type. It can be a full URI,
or one of the following predefined values (default=alternate):
.INDENT 2.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
\fIalternate\fP an alternate representation of the entry or feed, for
example a permalink to the html version of the entry, or the
front page of the weblog.
.IP \(bu 2
\fIenclosure\fP a related resource which is potentially large in size
and might require special handling, for example an audio or video
recording.
.IP \(bu 2
\fIrelated\fP an document related to the entry or feed.
.IP \(bu 2
\fIself\fP the feed itself.
.IP \(bu 2
\fIvia\fP the source of the information provided in the entry.
.UNINDENT
.UNINDENT
.UNINDENT
.IP \(bu 2
\fItype\fP indicates the media type of the resource.
.IP \(bu 2
\fIhreflang\fP indicates the language of the referenced resource.
.IP \(bu 2
\fItitle\fP human readable information about the link, typically for
display purposes.
.IP \(bu 2
\fIlength\fP the length of the resource, in bytes.
.UNINDENT
.sp
RSS only supports one link with nothing but a URL. So for the RSS link
element the last link with rel=alternate is used.
.sp
RSS also supports one enclusure element per entry which is covered by
the link element in ATOM feed entries. So for the RSS enclusure element
the last link with rel=enclosure is used.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBlink\fP – Dict or list of dicts with data.
.IP \(bu 2
\fBreplace\fP – Add or replace old data.
.UNINDENT
.TP
.B Returns
List of link data.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B pubDate(pubDate=None)
Get or set the pubDate of the entry which indicates when the entry
was published. This method is just another name for the published(…)
method.
.UNINDENT
.INDENT 7.0
.TP
.B pubdate(pubDate=None)
Get or set the pubDate of the entry which indicates when the entry
was published. This method is just another name for the published(…)
method.
.sp
pubdate(…) is deprecated and may be removed in rssgen ≥ 0.8. Use
pubDate(…) instead.
.UNINDENT
.INDENT 7.0
.TP
.B published(published=None)
Set or get the published value which contains the time of the initial
creation or first availability of the entry.
.sp
The value can either be a string which will automatically be parsed or
a datetime.datetime object. In any case it is necessary that the value
include timezone information.
.INDENT 7.0
.TP
.B Parameters
\fBpublished\fP – The creation date.
.TP
.B Returns
Creation date as datetime.datetime
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B rights(rights=None)
Get or set the rights value of the entry which conveys information
about rights, e.g. copyrights, held in and over the entry. This ATOM
value will also set rss:copyright.
.INDENT 7.0
.TP
.B Parameters
\fBrights\fP – Rights information of the feed.
.TP
.B Returns
Rights information of the feed.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B rss_entry(extensions=True)
Create a RSS item and return it.
.UNINDENT
.INDENT 7.0
.TP
.B source(url=None, title=None)
Get or set the source for the current feed entry.
.sp
Note that ATOM feeds support a lot more sub elements than title and URL
(which is what RSS supports) but these are currently not supported.
Patches are welcome.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBurl\fP – Link to the source.
.IP \(bu 2
\fBtitle\fP – Title of the linked resource
.UNINDENT
.TP
.B Returns
Source element as dictionaries.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B summary(summary=None, type=None)
Get or set the summary element of an entry which conveys a short
summary, abstract, or excerpt of the entry. Summary is an ATOM only
element and should be provided if there either is no content provided
for the entry, or that content is not inline (i.e., contains a src
attribute), or if the content is encoded in base64.  This method will
also set the rss:description field if it wasn’t previously set or
contains the old value of summary.
.INDENT 7.0
.TP
.B Parameters
\fBsummary\fP – Summary of the entries contents.
.TP
.B Returns
Summary of the entries contents.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B title(title=None)
Get or set the title value of the entry. It should contain a human
readable title for the entry. Title is mandatory for both ATOM and RSS
and should not be blank.
.INDENT 7.0
.TP
.B Parameters
\fBtitle\fP – The new title of the entry.
.TP
.B Returns
The entriess title.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B ttl(ttl=None)
Get or set the ttl value. It is an RSS only element. ttl stands for
time to live. It’s a number of minutes that indicates how long a
channel can be cached before refreshing from the source.
.INDENT 7.0
.TP
.B Parameters
\fBttl\fP – Integer value representing the time to live.
.TP
.B Returns
Time to live of of the entry.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updated(updated=None)
Set or get the updated value which indicates the last time the entry
was modified in a significant way.
.sp
The value can either be a string which will automatically be parsed or
a datetime.datetime object. In any case it is necessary that the value
include timezone information.
.INDENT 7.0
.TP
.B Parameters
\fBupdated\fP – The modification date.
.TP
.B Returns
Modification date as datetime.datetime
.UNINDENT
.UNINDENT
.UNINDENT
.SS rssgen.util
.sp
This file contains helper functions for the feed generator module.
.INDENT 0.0
.TP
.B copyright
2013, Lars Kiesow <\fI\%lkiesow@uos.de\fP>
.TP
.B license
FreeBSD and LGPL, see license.* for more details.
.UNINDENT
.INDENT 0.0
.TP
.B rssgen.util.ensure_format(val, allowed, required, allowed_values=None, defaults=None)
Takes a dictionary or a list of dictionaries and check if all keys are in
the set of allowed keys, if all required keys are present and if the values
of a specific key are ok.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBval\fP – Dictionaries to check.
.IP \(bu 2
\fBallowed\fP – Set of allowed keys.
.IP \(bu 2
\fBrequired\fP – Set of required keys.
.IP \(bu 2
\fBallowed_values\fP – Dictionary with keys and sets of their allowed
values.
.IP \(bu 2
\fBdefaults\fP – Dictionary with default values.
.UNINDENT
.TP
.B Returns
List of checked dictionaries.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B rssgen.util.formatRFC2822(date)
Make sure the locale setting do not interfere with the time format.
.UNINDENT
.INDENT 0.0
.IP \(bu 2
\fI\%Index\fP
.IP \(bu 2
\fI\%Module Index\fP
.IP \(bu 2
\fI\%Search Page\fP
.UNINDENT
.SH AUTHOR
Lars Kiesow
.SH COPYRIGHT
2013-2016, Lars Kiesow
.\" Generated by docutils manpage writer.
.
